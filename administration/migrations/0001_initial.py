# Generated by Django 5.1.4 on 2025-01-27 13:54

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('dep_image', models.ImageField(blank=True, null=True, upload_to='department/')),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('slug', models.SlugField(default='', max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('Patient', 'Patient'), ('Doctor', 'Doctor'), ('Staff', 'Staff')], default='Patient', max_length=20)),
                ('phone_number', models.CharField(blank=True, max_length=10, null=True, unique=True)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='profile_pics/')),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('T', 'Transgender')], max_length=1)),
                ('address1', models.CharField(max_length=128)),
                ('address2', models.CharField(blank=True, max_length=128, null=True)),
                ('city', models.CharField(max_length=32)),
                ('state', models.CharField(max_length=20)),
                ('pincode', models.CharField(max_length=6)),
                ('country', models.CharField(blank=True, default='', max_length=32, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employ_code', models.CharField(max_length=32, unique=True)),
                ('qualification', models.CharField(max_length=64)),
                ('license_number', models.CharField(blank=True, max_length=32, null=True, unique=True)),
                ('consult_fees', models.DecimalField(blank=True, decimal_places=2, default=100, max_digits=6, null=True)),
                ('slug', models.SlugField(default='', max_length=32)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='administration.department')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='doctor', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pat_mrd_no', models.CharField(max_length=32, unique=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='patient', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MedicalRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_type', models.CharField(choices=[('CN', 'Consultaion Note'), ('LR', 'Lab Report'), ('PR', 'Prescription')], max_length=2)),
                ('record_date', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField()),
                ('diagnosis', models.TextField()),
                ('treatment', models.TextField()),
                ('prescription', models.TextField()),
                ('attachments', models.FileField(blank=True, null=True, upload_to='mrd/')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='administration.department')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='administration.doctor')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='administration.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('duration', models.PositiveIntegerField(help_text='Slot Duration in Minutes')),
                ('is_booked', models.BooleanField(default=False)),
                ('slug', models.SlugField(default='', max_length=32)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedule', to='administration.doctor')),
            ],
            options={
                'unique_together': {('doctor', 'date', 'start_time')},
            },
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment_number', models.CharField(max_length=32, unique=True)),
                ('reason', models.CharField(choices=[('CO', 'Consultation'), ('FU', 'Follow-up'), ('SG', 'Surgery')], default='CO', max_length=2)),
                ('consultaion_fees', models.DecimalField(decimal_places=2, max_digits=6)),
                ('status', models.CharField(choices=[('SH', 'Scheduled'), ('RP', 'Reported'), ('CO', 'Completed')], default='SH', max_length=2)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='administration.department')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='administration.doctor')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='administration.patient')),
                ('appointment_on', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='administration.schedule')),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('Receptionist', 'Receptionist'), ('Nurse', 'Nurse'), ('Pharmacist', 'Pharmacist')], max_length=20)),
                ('employee_code', models.CharField(max_length=32, unique=True)),
                ('hire_date', models.DateField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='staff', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Billing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bill_no', models.CharField(max_length=32)),
                ('date', models.DateTimeField()),
                ('consult_charge', models.DecimalField(decimal_places=2, max_digits=6)),
                ('medication_charge', models.DecimalField(decimal_places=2, max_digits=10)),
                ('procedure_charge', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('PD', 'Paid'), ('PE', 'Pending'), ('UP', 'Unpaid')], max_length=2)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='administration.doctor')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='administration.patient')),
                ('staff', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='administration.staff')),
            ],
        ),
    ]
